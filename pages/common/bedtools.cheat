; This has been extracted from
; https://github.com/tldr-pages/tldr/blob/master/pages/common/bedtools.md

% bedtools, common

# Intersect two files regarding the sequences' strand and save the result to the specified file
bedtools intersect -a <path_to_file_1> -b <path_to_file_2> -s > <path_to_output_file>

# Intersect two files with a left outer join, i.e. report each feature from <file_1> and NULL if no overlap with <file_2>
bedtools intersect -a <path_to_file_1> -b <path_to_file_2> -lof > <path_to_output_file>

# Using more efficient algorithm to intersect two pre-sorted files
bedtools intersect -a <path_to_file_1> -b <path_to_file_2> -sorted > <path_to_output_file>

# Group file <`path_to_file`> based on the first three and the fifth column and summarize the sixth column by summing it up
bedtools groupby -i <path_to_file> -c 1-3,5 -g 6 -o sum

# Convert bam-formatted file to a bed-formatted one
bedtools bamtobed -i <path_to_file>.bam > <path_to_file>.bed

# Find for all features in <file_1>.bed the closest one in <file_2>.bed and write their distance in an extra column (input files must be sorted)
bedtools closest -a <path_to_file_1>.bed -b <path_to_file_2>.bed -d
